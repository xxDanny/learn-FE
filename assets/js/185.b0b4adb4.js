(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{1196:function(_,v,p){"use strict";p.r(v);var t=p(3),n=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"移动设计院"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移动设计院"}},[_._v("#")]),_._v(" 移动设计院")]),_._v(" "),v("p",[_._v("中国移动通信集团设计院有限公司，创建于 1952 年，目前为中国移动通信集团有限公司的直属专业公司，服务于通信咨询与设计领域的最前沿。")]),_._v(" "),v("p",[_._v("中国移动通信集团设计院有限公司是国家甲级咨询勘察设计单位，具有多种专业相关资质。公司本部共设置职能部门 13 个，直属单位 13 个，大区分院 13 个，子公司 2 个。公司坚持以 “成为一流的新型信息基础设施数智化科技型企业”为战略愿景，聚焦数智化规划设计、数智化网络研究、数智化转型咨询三大板块业务，秉承中国移动 “正德厚生 臻于至善”的核心价值观，充分发挥技术牵引作用，不断提高产品质量，提升服务水平，助力中国移动“创世界一流”示范企业和做“网络强国、数字中国、智慧社会主力军”的总目标而努力奋斗")]),_._v(" "),v("p",[_._v("自我介绍 + 材料分析回答 + 其他 offer 情况 + 薪水 + 啥时候能来上班")]),_._v(" "),v("p",[_._v("一分钟自我介绍\n简单针对简历问一下\n问了学历 是否统招本科 意向城市 能接受的薪资\n材料分析题，1 分钟阅读组织语言，3 分钟陈述")]),_._v(" "),v("p",[_._v("1、是不是北京户口？\n2、是不是统招？\n3、年龄多大？\n4、如何看待疫情之下的地摊经济？\n5、现阶段最大的不足？以及最想改变什么？")]),_._v(" "),v("p",[_._v("自我介绍\n阅读材料并说出自己的观点，一共控制在两分钟。（关于 5G 发展，用户对资费过高存在意见，你怎么看）\n自己和岗位的契合度\n工作地点\n要求薪资")]),_._v(" "),v("p",[_._v("客观题")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("报复性消费")])]),_._v(" "),v("li",[v("p",[_._v("我的题目是关于近几年来明星纷纷签约机构的看法")])]),_._v(" "),v("li",[v("p",[_._v("问的是关于未来 6g 7g 移动还有哪些欠缺")])]),_._v(" "),v("li",[v("p",[_._v("如何看待当下社会的松弛和紧绷")])])]),_._v(" "),v("p",[_._v("西安场面试，自我介绍，工作地点，薪资，自己相对其他人的优势，性格的优点缺点")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://ac.nowcoder.com/discuss/794433?type=0&order=3&pos=19&page=3",target:"_blank",rel:"nofollow noopener noreferrer"}},[_._v("中国移动设计院（北京）面经"),v("OutboundLink")],1)]),_._v(" "),v("h2",{attrs:{id:"程序员如何快速上手一个新项目"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#程序员如何快速上手一个新项目"}},[_._v("#")]),_._v(" 程序员如何快速上手一个新项目？")]),_._v(" "),v("p",[_._v("作为开发人员，我们不可避免地会遇到如下场景，一是接手前同事的项目，二是参与到新的项目组开发。 如果项目不紧急留给我们时间去了解业务还好，一旦项目紧急，则会让我们感觉到压力山大。这个时候必须要有一套行之 "),v("a",{attrs:{href:"https://developer.aliyun.com/article/792510?utm_content=m_1000298517",target:"_blank",rel:"nofollow noopener noreferrer"}},[_._v("有效的方案"),v("OutboundLink")],1),_._v("，能够引导我们快速步入正轨。 成熟的程序员，擅长从过往经验里总结出快速上手和熟悉新项目的技巧。")]),_._v(" "),v("p",[_._v("在接手一个自己不太熟悉的新项目时，可以从以下几点思考以便快速熟悉系统。")]),_._v(" "),v("ol",[v("li",[_._v("熟悉业务")])]),_._v(" "),v("p",[_._v("用户是谁、提供的核心功能是什么、系统在上下游的地位是什么。不涉及具体的实现细节，通过核心功能产品层面的熟悉，能够对项目有一个全局性把握。")]),_._v(" "),v("p",[_._v("如果接手的项目没有直接的文档，那么可以通过实际上手使用相关功能或者咨询相关产品/运营同学了解，然后再自己归纳验证，整个过程下来，你就对这个项目是做什么的，用户是谁就有了一定的了解，我们接下就可以谈谈如何上手")]),_._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[_._v("熟悉部署结构")])]),_._v(" "),v("p",[_._v("最新的代码在哪，测试环境如何搭建，监控告警有哪些，线上如何部署，线上机器分布情况等等，通过自己亲自发布一次代码，观察哪些指标，了解整体的发布流程以及部署情况")]),_._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[_._v("从问题中学习")])]),_._v(" "),v("p",[_._v("系统较为复杂时，实现细节太多，直接上手看代码熟悉链路的实现细节效率较低，比较好的方式是通过实际问题，了解一个问题的来龙去脉，通过具体问题的修复过程中，逐步熟悉整个系统，但需要把熟悉的部分整理到整体的认识当中。\n就好比玩一款拼图游戏，一个局部一个局部拼好，但心中始终要有一个全景视图，把局部的拼图一点点归纳到整体视图中。")]),_._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[_._v("owner 的心态")])]),_._v(" "),v("p",[_._v("接手一个系统，就需要以 owner 心态对待。\n有些同学习惯性的事无巨细都请教老同学，心底有所依赖，缺少了一份独立思考，成长起来就相对较慢。\n遇到疑问要首先要自己做一个判断，不论判断的是否正确，经过一次思考后，对系统的理解将会上一个台阶。")]),_._v(" "),v("ol",{attrs:{start:"5"}},[v("li",[_._v("如果是我应该怎么做")])]),_._v(" "),v("p",[_._v("在熟悉系统的过程中，可以多问一下，如果是我来设计这个项目，或者由我来实现这个功能，应该怎么做。\n原有的项目可能由于历史原因，并不是以最优方式实现，对比自己期望的做法，可以快速了解到系统这样做的深层原因。\n通过一次次对自己的追问中，可以更快的理解系统的深层背景，同时增加自身的设计能力。\n而自己原有的技能，也能更好的反馈在新的项目当中。")]),_._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[_._v("项目的架构、技术有了初步的了解")])]),_._v(" "),v("p",[_._v("我们不要一上来就逐行去读源码，这样不仅效率低，而且容易一下子就陷入到细节中把自己绕晕，那么我们应该怎么做呢？\n首先我们需要提前了解公司常见的技术，开发部署环境、常用中间件、DB 等，对公司的技术有个大致的了解，和市面上相似的技术进行比较，了解每个技术的优缺点，这样我们后面才能知道为什么会用这个技术。")]),_._v(" "),v("p",[_._v("其次我们要寻找整个项目的重点和难点在哪里，针对一个有一定开发经验的同学，我们在了解到项目的运转模式后，我们可以想想，如何是让你来设计实现整个项目，你会怎么做，技术选型会如何选，哪里可能不好设计，哪里可能存在挑战。")]),_._v(" "),v("p",[_._v("在想清楚这个问题后，再来验证当前项目的技术架构是否与预想一致，不一致的地方想办法弄清楚为什么，项目的技术架构如何获取呢？")]),_._v(" "),v("p",[_._v("项目是由各个应用组成的，各个应用有自己的模块，各个应用的职责是什么一般很容易获取到，公司内部一般都能找到应用的描述，但是自己的模块划分怎么获取到呢？\n如果有相关文档那当然很容易，但是如果没有文档，我们可以尝试问问同事了解，如果上述两招都不好使，只有代码，那我们只能从代码着手了")]),_._v(" "),v("p",[_._v("好的设计可以直接从工程的目录结构上了解到应用的模块分类，从命名上知道模块大致的作用，其次我们可以从 pom 文件、打包脚本、接口类等对应用模块以及提供的服务能力进行初步了解（这里以 Java 工程为例），同时进行到这一步后，我们可以将应用以及应用内模块的功能进行了一个整理，形成一个文档；这样当我们需要实现一个需求或者需要修 Bug 的时候，我们可以快速知道这个功能可能需要涉及哪些应用以及模块。")]),_._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[_._v("在问题中思考")])]),_._v(" "),v("p",[_._v("最后就是进行实战了，在我们了解项目的运转模式后，我们对项目的架构、技术有了初步的了解，那么我们可以上手一个小需求了，或者尝试改改小 bug，这时候才是我们需要扣细节的时候。")]),_._v(" "),v("p",[_._v("我们接到需求后，思考涉及的应用以及模块，然后去看当前这些模块的实现，搞懂相关的实现，如何搞懂呢？")]),_._v(" "),v("p",[_._v("有一些很好的实践，例如在本地完成工程的搭建后，针对代码进行 debug（debug 有很多小技巧可以提升效率，例如远程 debug、条件断点等，可以现在网上进行学习掌握），了解每步实现的处理和数据变化，从而完全掌握这一个小模块或功能点的实现，这样在心中有数后，就可以愉快的将小需求进行开发了，多做几个小需求后，对应用的细节也就慢慢熟悉起来了。")]),_._v(" "),v("p",[_._v("0\n15\n程序员如何快速上手一个新项目？\n来自：大淘宝技术 2021-09-28 463\n简介： 作为开发人员，我们不可避免地会遇到如下场景，一是接手前同事的项目，二是参与到新的项目组开发。 如果项目不紧急留给我们时间去了解业务还好，一旦项目紧急，则会让我们感觉到压力山大。这个时候必须要有一套行之有效的方案，能够引导我们快速步入正轨。 成熟的程序员，擅长从过往经验里总结出快速上手和熟悉新项目的技巧。 今天我们邀请了 4 名淘系技术工程师，给大家分享一些他们在接手新项目时的方法心得，希望对换工作或者换业务的你有帮助。\n原创 淘系技术 淘系技术  6 月 24 日")]),_._v(" "),v("p",[_._v("640.gif")]),_._v(" "),v("p",[_._v("不要事无巨细地请教老同学，要有 Owner 的心态")]),_._v(" "),v("p",[_._v("淘系技术部 - 淘系架构 - 光锥")]),_._v(" "),v("p",[_._v("在接手一个自己不太熟悉的新项目时，可以从以下几点思考以便快速熟悉系统。")]),_._v(" "),v("p",[_._v("image.png")]),_._v(" "),v("p",[_._v("▐  熟悉业务")]),_._v(" "),v("p",[_._v("用户是谁、提供的核心功能是什么、系统在上下游的地位是什么。")]),_._v(" "),v("p",[_._v("不涉及具体的实现细节，通过核心功能产品层面的熟悉，能够对项目有一个全局性把握。")]),_._v(" "),v("p",[_._v("▐  熟悉部署结构")]),_._v(" "),v("p",[_._v("最新的代码在哪，测试环境如何搭建，监控告警有哪些，线上如何部署，线上机器分布情况等等，通过自己亲自发布一次代码，观察哪些指标，了解整体的发布流程以及部署情况。")]),_._v(" "),v("p",[_._v("▐  从问题中学习\n系统较为复杂时，实现细节太多，直接上手看代码熟悉链路的实现细节效率较低，比较好的方式是通过实际问题，了解一个问题的来龙去脉，通过具体问题的修复过程中，逐步熟悉整个系统，但需要把熟悉的部分整理到整体的认识当中。\n就好比玩一款拼图游戏，一个局部一个局部拼好，但心中始终要有一个全景视图，把局部的拼图一点点归纳到整体视图中。")]),_._v(" "),v("p",[_._v("▐  owner 的心态")]),_._v(" "),v("p",[_._v("接手一个系统，就需要以 owner 心态对待。")]),_._v(" "),v("p",[_._v("有些同学习惯性的事无巨细都请教老同学，心底有所依赖，缺少了一份独立思考，成长起来就相对较慢。")]),_._v(" "),v("p",[_._v("遇到疑问要首先要自己做一个判断，不论判断的是否正确，经过一次思考后，对系统的理解将会上一个台阶。")]),_._v(" "),v("p",[_._v("▐  如果是我应该怎么做\n在熟悉系统的过程中，可以多问一下，如果是我来设计这个项目，或者由我来实现这个功能，应该怎么做。")]),_._v(" "),v("p",[_._v("原有的项目可能由于历史原因，并不是以最优方式实现，对比自己期望的做法，可以快速了解到系统这样做的深层原因。")]),_._v(" "),v("p",[_._v("通过一次次对自己的追问中，可以更快的理解系统的深层背景，同时增加自身的设计能力。")]),_._v(" "),v("p",[_._v("而自己原有的技能，也能更好的反馈在新的项目当中。")]),_._v(" "),v("p",[_._v("认识各类大中型项目演进历程，有助于你真正理解一个项目")]),_._v(" "),v("p",[_._v("淘系技术部 - 淘系架构 - 家愿")]),_._v(" "),v("p",[_._v("工作多年，大中小型项目均经历过，分享一些我的经验。")]),_._v(" "),v("p",[_._v("image.png")]),_._v(" "),v("p",[_._v("▐  首先，谈谈中大型项目是如何演进的。\n部分中大型项目是慢慢演进而来的，这些项目一般都是从小项目或者相对简单的架构演变而来的，随着需求的叠加或当前的架构已不能支持用户规模逐步演变而来的。")]),_._v(" "),v("p",[_._v("演进方向一般都是从：单体 -> SOA -> 微服务 -> 云原生。")]),_._v(" "),v("p",[_._v("这类项目因时间周期长，迭代次数多，需求文档和设计文档一般都会存在缺失，一般都是文档落后于实现，且这类项目一般都有一些坑或者历史包袱，很难直接通过文档就直接将项目做到了然于心。")]),_._v(" "),v("p",[_._v("另一部分中大型项目则是近期设计开发完成，周期不是很长，一般是两年内的项目，这类项目因为是近期设计且中大型项目业务或架构都会相对比较复杂，在开发前都是经历了较为完整与严格的需求评审、技术选型/评审的，沉淀的文档和线上代码一般差距不会很大。")]),_._v(" "),v("p",[_._v("因为在设计之初就定位为中大型的项目，需求和设计一般在一开始就想的比较清楚了才会进行开发，初期功能上线后，后面的迭代升级一般不会在技术上进行大改，一般都是要么按照需求文档，将功能分期上线，要么就是一些小问题的修复，所以这类项目一般通过文档就能对项目进行一个整体的把控。")]),_._v(" "),v("p",[_._v("当然我们肯定乐意接触的项目都是后者，但是往往并不是事事都能如意，那么针对前者这种文档相对缺乏的项目，我们如何快速切入呢？")]),_._v(" "),v("p",[_._v("▐  下面我们谈谈如何快速熟悉一个项目。\n我们首先要了解业务背景，大部分情况下，技术都是为业务服务的，业务优先于技术，一般来讲，我们可以认为业务是一种商业模式，我们了解业务背景，其实本质上是了解这个业务背后的运转模式，基于运转模式进行深入。其实变相的就对整个系统进行了了解。")]),_._v(" "),v("p",[_._v("image.png")]),_._v(" "),v("p",[_._v("举个例子：比如我们接手了一个 Push 消息系统（消息推送），那么我们需要先知道 Push 是什么以及 Push 的运转模式，Push 是什么？")]),_._v(" "),v("p",[_._v("Push 可以简单认为是一种触发用户的方式，我们通过 Push 触达终端设备从而起到一个通知提醒的作用，一般情况下 Push 指的是无线设备上的应用通知。")]),_._v(" "),v("p",[_._v("Push 的运转模式是怎样的呢，整个链路是怎样的呢？")]),_._v(" "),v("p",[_._v("我对 Push 的整个链路进行了一个抽象：消息请求 -> 消息受理（分发） -> 消息送出 -> 消息到达 -> 消息曝光 -> 消息点击 -> 后续业务转化，其中部分链路可以进行合并（例如消息受理和消息送出，但大致链路遵守这个模式）。")]),_._v(" "),v("p",[_._v("将整个 Push 的链路抽象出来后，我们接下来就可以针对各个链路进行进一步的了解，比如我们想要了解消息送出，那么我们就会问消息是如何送出的？送出给谁？")]),_._v(" "),v("p",[_._v("在 App Push 下，消息送出一般指投递给具体的通道（包括自建通道和厂商通道），那么是如何投递的呢？")]),_._v(" "),v("p",[_._v("我们接下来就去了解各个通道是如何提供服务的，是基于什么技术，我们需要如何使用，这样就把通道送出的大致原理搞明白了。")]),_._v(" "),v("p",[_._v("其实整个思路也是遵循了总分总的模式，我们首先了解项目的整体业务背景，整体的运转模式，然后基于运转模式里的各个点再进行深入了解，然后总结各个点，最后达到对整个项目有个整体的认知的地步。")]),_._v(" "),v("p",[_._v("运转模式其实是对业务的一个抽象，如果接手的项目没有直接的文档，那么可以通过实际上手使用相关功能或者咨询相关产品/运营同学了解，然后再自己归纳验证，整个过程下来，你就对这个项目是做什么的，用户是谁就有了一定的了解，我们接下就可以谈谈如何上手")]),_._v(" "),v("p",[_._v("▐  在了解了项目的运转模式后，我们针对代码如何上手呢？")]),_._v(" "),v("p",[_._v("我们不要一上来就逐行去读源码，这样不仅效率低，而且容易一下子就陷入到细节中把自己绕晕，那么我们应该怎么做呢？")]),_._v(" "),v("p",[_._v("首先我们需要提前了解公司常见的技术，开发部署环境、常用中间件、DB 等，对公司的技术有个大致的了解，和市面上相似的技术进行比较，了解每个技术的优缺点，这样我们后面才能知道为什么会用这个技术。")]),_._v(" "),v("p",[_._v("其次我们要寻找整个项目的重点和难点在哪里，针对一个有一定开发经验的同学，我们在了解到项目的运转模式后，我们可以想想，如何是让你来设计实现整个项目，你会怎么做，技术选型会如何选，哪里可能不好设计，哪里可能存在挑战。")]),_._v(" "),v("p",[_._v("image.png")]),_._v(" "),v("p",[_._v("在想清楚这个问题后，再来验证当前项目的技术架构是否与预想一致，不一致的地方想办法弄清楚为什么，项目的技术架构如何获取呢？")]),_._v(" "),v("p",[_._v("项目是由各个应用组成的，各个应用有自己的模块，各个应用的职责是什么一般很容易获取到，公司内部一般都能找到应用的描述，但是自己的模块划分怎么获取到呢？")]),_._v(" "),v("p",[_._v("如果有相关文档那当然很容易，但是如果没有文档，我们可以尝试问问同事了解，如果上述两招都不好使，只有代码，那我们只能从代码着手了。")]),_._v(" "),v("p",[_._v("好的设计可以直接从工程的目录结构上了解到应用的模块分类，从命名上知道模块大致的作用，其次我们可以从 pom 文件、打包脚本、接口类等对应用模块以及提供的服务能力进行初步了解（这里以 Java 工程为例），同时进行到这一步后，我们可以将应用以及应用内模块的功能进行了一个整理，形成一个文档；这样当我们需要实现一个需求或者需要修 Bug 的时候，我们可以快速知道这个功能可能需要涉及哪些应用以及模块。")]),_._v(" "),v("p",[_._v("最后就是进行实战了，在我们了解项目的运转模式后，我们对项目的架构、技术有了初步的了解，那么我们可以上手一个小需求了，或者尝试改改小 bug，这时候才是我们需要扣细节的时候。")]),_._v(" "),v("p",[_._v("相反，带着具体问题去看，逐步踩坑，才能快速上手；因为有些问题不做是不会发现的，比如代码规范问题，不去写，我们永远不知道自己和规范差多远，这是个逐步矫正的过程。刚开始做的小需求不用求快，而是以规范为主。做完之后有了成就感，对我们也是一种正向激励。")]),_._v(" "),v("p",[_._v("我们接到需求后，思考涉及的应用以及模块，然后去看当前这些模块的实现，搞懂相关的实现，如何搞懂呢？")]),_._v(" "),v("p",[_._v("有一些很好的实践，例如在本地完成工程的搭建后，针对代码进行 debug（debug 有很多小技巧可以提升效率，例如远程 debug、条件断点等，可以现在网上进行学习掌握），了解每步实现的处理和数据变化，从而完全掌握这一个小模块或功能点的实现，这样在心中有数后，就可以愉快的将小需求进行开发了，多做几个小需求后，对应用的细节也就慢慢熟悉起来了。")]),_._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[_._v("十分推荐在项目熟悉了解过程中沉淀自己的资料")])]),_._v(" "),v("p",[_._v("程中可以产出：业务大图、整体业务流程图。")]),_._v(" "),v("p",[_._v("功能&流程：通过试用项目对应的产品先建立对项目功能和流程的初步概念。\n技术架构：通过项目现有设计资料并结合表结构、重点功能代码、鹰眼调用链信息等了解新项目的技术架构。\n过程中可以产出：项目业务流程图、系统架构图、数据模型、重点逻辑流程图。")]),_._v(" "),v("h2",{attrs:{id:"从一个熟悉的环境转入陌生的环境-你会怎样"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#从一个熟悉的环境转入陌生的环境-你会怎样"}},[_._v("#")]),_._v(" 从一个熟悉的环境转入陌生的环境，你会怎样")]),_._v(" "),v("ol",[v("li",[_._v("摆正心态是基础，相信自己的能力是可以胜任这个岗位的工作，但同时也会抱着谦逊的态度向公司中的老员工请教和学习，要更多积极向上的心态。工作初期即使有一些小挫折也会相信自己，不会悲观和消极")]),_._v(" "),v("li",[_._v("适应工作内容：我会尽快了解岗位的工作内容，迅速通过自己的岗位职责来了解具体的工作内容，并且对应自己所具备的工作能力不足的部分迅速补齐，优势的部分充分发挥")]),_._v(" "),v("li",[_._v("企业文化：在工作中还要了解公司的企业文化和团队的做事风格，多和团队中的同事请教沟通，了解团队做事的方式和方法。在做事的时候，团队和其他成员在同一个维度上面尽快得到同事的认可")]),_._v(" "),v("li",[_._v("人际沟通：尽快适应新的环境，离不开好的人际关系，在加入团队之后不管是在工作当中还是工作以外的时间，都会主动找一些时间多和同事交流，对大家多一些了解，同时也让同事多一些对自己的了解，这样才更有利于接下来的团队合作，毕竟大多数的工作都需要团队协作来完成。对团队中同事的性格和做事的方式了解的越多也会有利于自己工作目标的实现")])]),_._v(" "),v("p",[_._v("一个全新的岗位或者新的工作环境都要自己调整好心态，愿意与人沟通和分享，发挥好自己的优势能力迅速适应环境肯定不是特别难的事情")]),_._v(" "),v("p",[_._v("1、通过岗位职责来了就具体工作内容并且对应自己所具备的能力，不足的部分要迅速补齐，优势部分就要充分发挥\n2、在工作中还要了解公司的企业文化和团队的做事风格，多和团队中的同事请教还有沟通，了解团队做事的方式和方法，在做事的时候团队和其他成员在同一个维度上面，尽快得到同事的认可。\n二、调整心态\n1、加入到一个全新的环境当中，调整好自己的心态是非常重要的，相信自己的能力可以胜任这个岗位的工作，但同时也会抱着相对谦逊的态度向公司中的前辈请教和学习，要更多积极向上的心态，工作初期即使有些小挫折，也要相信自己，不要悲观和消极。\n三、人际沟通\n尽快适应新的环境，离不开好的人际关系，在加入团队之后呢，不管是在工作当中，还是在工作以外的时间都会找些机会和同事多沟通多些交流，对大家多些了解，也让同事多一些对自己的了解，这样才更有利于接下来的工作，毕竟大多数工作都需要团队协作来完成\n一个全新的岗位或是全新的工作环境，只要自己调整好心态，让自己变得积极，愿意与人沟通和分享，发挥好自己的优势能力，迅速地适应环境肯定不是特别难的事情。")]),_._v(" "),v("h2",{attrs:{id:"三个词语形容自己"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三个词语形容自己"}},[_._v("#")]),_._v(" 三个词语形容自己")]),_._v(" "),v("p",[_._v("学习能力强，计划者，复盘意识")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("学习能力强，并且在学习过程我也不会盲目学习，我会去阅读一些书籍，总结出一套属于自己的方法论，提高自己的学习效率。我相信终身学习，")])]),_._v(" "),v("li",[v("p",[_._v("计划者，我喜欢将每天的生活拆解成一个个计划，比如我现在在使用一个小而美的 todo app，。它是基于四象限法则根据任务的紧急性和重要性制定当天的计划，我会在里面制定我的日计划，周计划和年计划。我非常享受每天 check 掉一个个任务的感觉，这样可以让我按时完成任务，生活更加有条理。并且在完成这个任务之后，我会给自己一点点小小的奖励，我相信两遍产生质变，这中正反馈机制让我在每天的日久月累中成为更好的自己。")])])]),_._v(" "),v("h2",{attrs:{id:"为什么选择"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择"}},[_._v("#")]),_._v(" 为什么选择？")]),_._v(" "),v("p",[_._v("企业文化和我的个人价值观十分匹配")])])}),[],!1,null,null,null);v.default=n.exports}}]);