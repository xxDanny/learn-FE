(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{1115:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"域名解析过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#域名解析过程"}},[s._v("#")]),s._v(" 域名解析过程")]),s._v(" "),t("h2",{attrs:{id:"什么是-dns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-dns"}},[s._v("#")]),s._v(" 什么是 DNS？")]),s._v(" "),t("p",[s._v("DNS 代表一个域名系统，是一个全球性的分布式网络，共同形成一个 ip 到 域名的映射的数据库。层次结构由 DNS 服务器组成")]),s._v(" "),t("h2",{attrs:{id:"host-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#host-文件"}},[s._v("#")]),s._v(" HOST 文件")]),s._v(" "),t("p",[s._v("Hosts 保存域名和 ip 地址的映射文件\n是一个没有扩展名的系统文件，可以用记事本等工具打开，其作用就是将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交 DNS 域名解析服务器进行 IP 地址的解析。")]),s._v(" "),t("p",[s._v("不同系统hosts文件的位置")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("ul",[t("li",[s._v("Windows 系统hosts位于 C:\\Windows\\System32\\drivers\\etc\\hosts")]),s._v(" "),t("li",[s._v("Android（安卓）系统hosts位于 /etc/hosts")]),s._v(" "),t("li",[s._v("Mac（苹果电脑）系统hosts位于 /etc/hosts")]),s._v(" "),t("li",[s._v("iPhone（iOS）系统hosts位于 /etc/hosts")]),s._v(" "),t("li",[s._v("Linux系统hosts位于 /etc/hosts")]),s._v(" "),t("li",[s._v("绝大多数Unix系统都是在 /etc/hosts")])])]),t("h2",{attrs:{id:"dns-服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dns-服务器"}},[s._v("#")]),s._v(" DNS 服务器")]),s._v(" "),t("p",[s._v("通过 DNS 查询，得到域名的 IP 地址，才能访问网站。那么，DNS 查询到底是怎么完成的？")]),s._v(" "),t("p",[s._v("域名对应的 IP 地址，都保存在 DNS 服务器。我们输入域名，浏览器就会在后台，自动向 DNS 服务器发出请求，获取对应的 IP 地址。这就是 DNS 查询")]),s._v(" "),t("p",[t("img",{attrs:{src:a(606),alt:""}})]),s._v(" "),t("p",[s._v("举例来说，我输入 "),t("code",[s._v("es6.ruanyifeng.com")]),s._v(" 这个域名，浏览器就要向 DNS 服务器查询，它的 IP 地址是什么，然后向该 IP 发出访问请求。")]),s._v(" "),t("h2",{attrs:{id:"icann"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#icann"}},[s._v("#")]),s._v(" ICANN")]),s._v(" "),t("p",[s._v("全世界域名的最高管理机构，是一个叫做 ICANN （Internet Corporation for Assigned Names and Numbers）的组织。它的总部在美国加州。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(607),alt:""}})]),s._v(" "),t("p",[s._v("它原来是美国商务部下面的一个非盈利机构，所以有人说，美国政府控制了全世界的域名，这种说法是有根据的。2016年，美国政府宣布，ICANN 不再隶属于商务部，成为一个自我管理的独立机构。但是可想而知，美国政府依然对它有绝对影响。")]),s._v(" "),t("p",[s._v("ICANN 负责管理全世界域名系统的运作。它的一项主要工作，就是规定顶级域名（top level domain，简写为 TLD）。")]),s._v(" "),t("h2",{attrs:{id:"进行一次-dns-查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进行一次-dns-查询"}},[s._v("#")]),s._v(" 进行一次 DNS 查询")]),s._v(" "),t("p",[s._v("命令行工具 dig 可以跟 DNS 服务器互动，我们就用它演示 DNS 查询。如果你还没有安装，可以搜一下安装方法，在 Linux 系统下是非常容易的。")]),s._v(" "),t("p",[s._v("它的查询语法如下（美元符号$是命令行提示符）")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dig")]),s._v(" @"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("DNS 服务器"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("域名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("向 1.1.1.1 查询域名，就执行下面的命令。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dig")]),s._v(" @1.1.1.1 es6.ruanyifeng.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("正常情况下，它会输出一大堆内容")]),s._v(" "),t("p",[t("img",{attrs:{src:a(608),alt:""}})]),s._v(" "),t("p",[s._v("在其中找到 ANSWER SECTION 这个部分，它给出了查询的答案，域名对应的 IP 地址是 104.198.14.52。")]),s._v(" "),t("p",[s._v("MAC 可以在终端中使用 nslookup 查询，比如查询 es6.ruanyifeng.com")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nslookup")]),s._v(" es6.ruanyifeng.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:a(609),alt:""}})]),s._v(" "),t("p",[s._v("右上图，也给出了查询的答案，域名对应的 IP 地址是 104.198.14.52。")]),s._v(" "),t("h2",{attrs:{id:"域名的树状结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#域名的树状结构"}},[s._v("#")]),s._v(" 域名的树状结构")]),s._v(" "),t("p",[s._v("你可能会问，难道 DNS 服务器（比如 1.1.1.1）保存了世界上所有域名（包括二级域名、三级域名）的 IP 地址？")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[t("a",{attrs:{href:"https://www.cloudflare.com/zh-cn/learning/dns/what-is-1.1.1.1/",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("1.1.1.1"),t("OutboundLink")],1),s._v(" 是一个公共 DNS 解析器，其可使 DNS 查询更快、更安全。")])]),t("p",[s._v("当然不是。DNS 是一个分布式系统，1.1.1.1 只是用户查询入口，它也需要再向其他 DNS 服务器查询，才能获得最终的 IP 地址。")]),s._v(" "),t("p",[s._v("要说清楚 DNS 完整的查询过程，就必须了解 域名是一个树状结构。")]),s._v(" "),t("p",[s._v("最顶层的域名是 "),t("code",[s._v("根域名（root）")]),s._v("，然后是 "),t("code",[s._v("顶级域名（top-level domain，简写 TLD）")]),s._v("，再是 "),t("code",[s._v("一级域名")]),s._v("、"),t("code",[s._v("二级域名")]),s._v("、"),t("code",[s._v("三级域名")]),s._v("。")]),s._v(" "),t("p",[s._v("DNS 层次结构由以下元素组成：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("Root Level ｜ 根域名（root")])]),s._v(" "),t("li",[t("p",[s._v("Top Level Domains ｜ 顶级域名")])]),s._v(" "),t("li",[t("p",[s._v("Second Level Domains ｜ 二级域名")])]),s._v(" "),t("li",[t("p",[s._v("Sub-Domain ｜ 子域")])]),s._v(" "),t("li",[t("p",[s._v("Host ｜ 主机")])])]),s._v(" "),t("h2",{attrs:{id:"根域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根域名"}},[s._v("#")]),s._v(" 根域名")]),s._v(" "),t("p",[s._v("由于 ICANN 管理着所有的顶级域名，所以它是最高一级的域名节点，被称为根域名（root domain）。在有些场合，"),t("code",[s._v("www.example.com")]),s._v(" 被写成 "),t("code",[s._v("www.example.com.")]),s._v("，即最后还会多出一个点 "),t("code",[s._v(".")]),s._v(" 这个点就是根域名。")]),s._v(" "),t("p",[s._v("理论上，所有域名查询都必须先查询根域名，因为只有根域名才能告诉你，某个顶级域名由哪台服务器管理。事实上也确实如此，ICANN 维护着一张列表，里面记载着顶级域名和对应的托管商。")]),s._v(" "),t("p",[s._v("比如，我要访问 "),t("code",[s._v("www.example.com")]),s._v("，就必须先询问 "),t("code",[s._v("ICANN")]),s._v(" 的根域名列表，它会告诉我 "),t("code",[s._v(".com")]),s._v(" 域名由 "),t("code",[s._v("Verisign")]),s._v(" 托管，我必须去找 "),t("code",[s._v("Verisign")]),s._v("，它会告诉我 "),t("code",[s._v("example.com")]),s._v(" 服务器在哪里")]),s._v(" "),t("p",[s._v("再比如，我要访问 "),t("code",[s._v("abc.xyz")]),s._v(" ，也必须先去询问"),t("strong",[s._v("根域名列表")]),s._v("，它会告诉我 "),t("code",[s._v(".xyz")]),s._v(" 域名由 "),t("code",[s._v("CentralNic")]),s._v(" 公司托管。根域名列表还记载，"),t("code",[s._v(".google")]),s._v(" 由谷歌公司托管，"),t("code",[s._v(".apple")]),s._v(" 由苹果公司托管等等。")]),s._v(" "),t("p",[s._v("由于根域名列表很少变化，大多数 DNS 服务商都会提供它的缓存，所以根域名的查询事实上不是那么频繁。")]),s._v(" "),t("h2",{attrs:{id:"dns-根区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dns-根区"}},[s._v("#")]),s._v(" DNS 根区")]),s._v(" "),t("p",[t("strong",[s._v("根域名列表")]),s._v("的正式名称是 DNS 根区（DNS root zone），"),t("a",{attrs:{href:"https://www.iana.org/domains/root/files",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("ICANN 官网"),t("OutboundLink")],1),s._v("可以查看这个"),t("a",{attrs:{href:"https://www.internic.net/domain/root.zone",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("根区文件"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("p",[s._v("该文件保存所有顶级域名的托管信息，所以非常大，超过2MB。")]),s._v(" "),t("p",[s._v("举例来说，顶级域名 "),t("code",[s._v(".com")]),s._v(" 可以查到 13 个域名服务器。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ncom"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NS")]),s._v("  m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("也就是说，"),t("code",[s._v(".com")]),s._v(" 域名的解析结果，可以到这个 13 个服务器的任一台查询。细心的读者可能发现，这些服务器本身也是使用域名（比如 "),t("code",[s._v("a.gtld-servers.net.")]),s._v("）标识，那么还得去查询它们指向的服务器，这样很容易造成循环查询")]),s._v(" "),t("p",[s._v("因此，DNS 根区还会同时提供这些服务器的 IP 地址（IPv4 和 IPv6）。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("\na"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.5")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".6")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".30")]),s._v("\na"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AAAA")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2001")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("503")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("a83e"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\nb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.33")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".14")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".30")]),s._v("\nb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AAAA")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2001")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("503")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("231d"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\nc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.26")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".92")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".30")]),s._v("\nc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gtld"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("servers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172800")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IN")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AAAA")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2001")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("503")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("83eb"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"根域名服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根域名服务器"}},[s._v("#")]),s._v(" 根域名服务器")]),s._v(" "),t("p",[s._v("保存 DNS 根区文件的服务器，就叫做 DNS 根域名服务器（root name server）。")]),s._v(" "),t("p",[s._v("由于早期的 DNS 查询结果是一个 512 字节的 UDP 数据包。这个包最多可以容纳 13 个服务器的地址，因此就规定全世界有 13 个根域名服务器，编号从"),t("code",[s._v("a.root-servers.net")]),s._v(" 一直到 "),t("code",[s._v("m.root-servers.net")]),s._v("。")]),s._v(" "),t("p",[s._v("这 13 台根域名服务器由 12 个组织独立运营。其中，Verisign 公司管理两台根域名服务器：A 和 J。每家公司为了保证根域名服务器的可用性，会部署多个节点，比如单单 Verisign 一家公司就部署了104台根域名服务器（2016年1月数据）。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("ol",[t("li",[t("p",[s._v("Verisign")])]),s._v(" "),t("li",[t("p",[s._v("University of Southern California")])]),s._v(" "),t("li",[t("p",[s._v("Cogent")])]),s._v(" "),t("li",[t("p",[s._v("University of Maryland")])]),s._v(" "),t("li",[t("p",[s._v("NASA AMES Research Center")])]),s._v(" "),t("li",[t("p",[s._v("Internet Systems Consortium")])]),s._v(" "),t("li",[t("p",[s._v("US Department of Defense")])]),s._v(" "),t("li",[t("p",[s._v("US Army Research Lab")])]),s._v(" "),t("li",[t("p",[s._v("Netnod")])]),s._v(" "),t("li",[t("p",[s._v("RIPE")])]),s._v(" "),t("li",[t("p",[s._v("ICANN")])]),s._v(" "),t("li",[t("p",[s._v("WIDE")])])])]),t("p",[s._v("所以，根域名服务器其实不止 13 台。据统计，截止2016年1月，全世界共有 517 台根域名服务器。你可以在 http://root-servers.org 这个网站查到所有根域名服务器的信息。")]),s._v(" "),t("p",[s._v("根域名服务器虽然有域名，但是最少必须知道一台的 IP 地址，否则就会陷入循环查询。一般来说，本机都保存一份根域名服务器的 IP 地址的缓存，叫做 "),t("a",{attrs:{href:"https://www.internic.net/zones/named.cache",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("name.cache"),t("OutboundLink")],1),s._v(" 文件。")]),s._v(" "),t("h2",{attrs:{id:"tld-顶级域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tld-顶级域名"}},[s._v("#")]),s._v(" TLD 顶级域名")]),s._v(" "),t("p",[s._v("DNS 层次结构中的根域下一级是顶级域。简单说，就是网址的最后一个部分。比如，网址 "),t("code",[s._v("www.example.com")]),s._v(" 的顶级域名就是 "),t("code",[s._v(".com")]),s._v("。")]),s._v(" "),t("p",[s._v("目前有许多 TLD 可用。正如我们所见，TLD 分为两个子类别。它们是组织层次结构和地理层次结构。让我们详细看看每一个。")]),s._v(" "),t("p",[s._v("它们可以分成两类:")]),s._v(" "),t("ul",[t("li",[s._v("组织层次,比如.com、.net、.edu、.org、.xxx等等，共有700多个。")]),s._v(" "),t("li",[s._v("地理层次结构，代表不同的国家和地区，比如.cn（中国）、.io（英属印度洋领地）、.cc（ 科科斯群岛）、.tv（图瓦卢）等，共有300多个。")])]),s._v(" "),t("h2",{attrs:{id:"一级域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一级域名"}},[s._v("#")]),s._v(" 一级域名")]),s._v(" "),t("p",[s._v("一级域名就是你在某个顶级域名下面，自己注册的域名。比如，"),t("code",[s._v("ruanyifeng.com")]),s._v(" 就是我在顶级域名 "),t("code",[s._v(".com")]),s._v(" 下面注册的。")]),s._v(" "),t("h2",{attrs:{id:"二级域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二级域名"}},[s._v("#")]),s._v(" 二级域名")]),s._v(" "),t("p",[s._v("二级域名是一级域名的子域名，是域名拥有者自行设置的，不用得到许可。比如，"),t("code",[s._v("es6")]),s._v(" 就是 "),t("code",[s._v("ruanyifeng.com")]),s._v(" 的二级域名。")]),s._v(" "),t("h2",{attrs:{id:"子域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子域"}},[s._v("#")]),s._v(" 子域")]),s._v(" "),t("p",[s._v("子域是 DNS 层次结构中的下一级。子域可以定义为作为主域一部分的域。唯一不是子域的域是根域。假设有两个域："),t("code",[s._v("one.example.com")]),s._v(" 和"),t("code",[s._v("two.example.com")]),s._v("。这里，两个域都是主域 "),t("code",[s._v("example.com")]),s._v(" 的子域，"),t("code",[s._v("example.com")]),s._v(" 也是 "),t("code",[s._v("com")]),s._v(" 顶级域的子域。")]),s._v(" "),t("p",[s._v("这是 DNS 层次结构和 DNS 层次结构的元素。")]),s._v(" "),t("h2",{attrs:{id:"域名的逐级查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#域名的逐级查询"}},[s._v("#")]),s._v(" 域名的逐级查询")]),s._v(" "),t("p",[s._v("这种树状结构的意义在于，只有上级域名，才知道下一级域名的 IP 地址，需要逐级查询。每一级域名都有自己的 DNS 服务器，存放下级域名的 IP 地址。\n所以，如果想要查询二级域名 "),t("code",[s._v("es6.ruanyifeng.com")]),s._v(" 的 IP 地址，需要三个步骤。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("第一步，查询"),t("code",[s._v("根域名服务器")]),s._v("，获得"),t("code",[s._v("顶级域名服务器")]),s._v(" .com（又称 TLD 服务器）的 IP 地址。")]),s._v(" "),t("p",[s._v("第二步，查询 "),t("code",[s._v("TLD 服务器")]),s._v(" .com，获得"),t("code",[s._v("一级域名服务器")]),s._v(" ruanyifeng.com 的 IP 地址。")]),s._v(" "),t("p",[s._v("第三步，查询"),t("code",[s._v("一级域名服务器")]),s._v(" ruanyifeng.com，获得"),t("code",[s._v("二级域名")]),s._v(" es6 的 IP 地址")])]),t("h2",{attrs:{id:"域名查询实战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#域名查询实战"}},[s._v("#")]),s._v(" 域名查询实战")]),s._v(" "),t("p",[s._v("根域名服务器全世界一共有13台（都是服务器集群）。它们的域名和 IP 地址如下。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(610),alt:""}})]),s._v(" "),t("p",[s._v("根域名服务器的 IP 地址是不变的，集成在操作系统里面。操作系统会选其中一台，查询 TLD 服务器的 IP 地址。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nslookup")]),s._v("  es6.ruanyifeng.com  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.33")]),s._v(".4.12\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例中，我们选择 192.33.4.12，向它发出查询，询问es6.ruanyifeng.com的 TLD 服务器的 IP 地址。")]),s._v(" "),t("p",[s._v("命令的输出结果如下。\n"),t("img",{attrs:{src:a(611),alt:""}})]),s._v(" "),t("p",[s._v("它给不了 es6.ruanyifeng.com 的 IP 地址")]),s._v(" "),t("p",[s._v("或者使用 dig 命令")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dig")]),s._v(" @192.33.4.12 es6.ruanyifeng.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("dig 命令的输出结果如下\n"),t("img",{attrs:{src:a(612),alt:""}})]),s._v(" "),t("p",[s._v("因为它给不了 "),t("code",[s._v("es6.ruanyifeng.com")]),s._v(" 的 IP 地址，所以输出结果中没有 "),t("code",[s._v("ANSWER SECTION")]),s._v("，只有一个 "),t("code",[s._v("AUTHORITY SECTION")]),s._v("，给出了 "),t("code",[s._v("com.")]),s._v("的13台 "),t("code",[s._v("TLD")]),s._v(" 服务器的域名。")]),s._v(" "),t("p",[s._v("下面还有一个 ADDITIONAL SECTION，给出了这13台 TLD 服务器的 IP 地址（包含 IPv4 和 IPv6 两个地址）。")]),s._v(" "),t("p",[s._v("有了 TLD 服务器的 IP 地址以后，我们再选一台接着查询。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dig")]),s._v(" @192.41.162.30 es6.ruanyifeng.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("上面示例中，192.41.162.30 是随便选的一台 .com 的 TLD 服务器，我们向它询问 es6.ruanyifeng.com 的 IP 地址。")]),s._v(" "),t("p",[s._v("返回结果如下。\n"),t("img",{attrs:{src:a(613),alt:""}})]),s._v(" "),t("p",[s._v("它依然没有 ANSWER SECTION 的部分，只有 AUTHORITY SECTION，给出了一级域名 ruanyifeng.com 的两台 DNS 服务器。")]),s._v(" "),t("p",[s._v("下面的 ADDITIONAL SECTION 就是这两台 DNS 服务器对应的 IP 地址。")]),s._v(" "),t("p",[s._v("第三步，再向一级域名的 DNS 服务器查询二级域名的 IP 地址。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dig")]),s._v(" @172.64.32.123 es6.ruanyifeng.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("返回结果如下。\n"),t("img",{attrs:{src:a(614),alt:""}})]),s._v(" "),t("p",[s._v("这次终于有了 ANSWER SECTION，得到了最终的二级域名的 IP 地址。")]),s._v(" "),t("p",[s._v("至此，三个步骤的 DNS 查询全部完成")]),s._v(" "),t("h2",{attrs:{id:"dns-服务器的种类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dns-服务器的种类"}},[s._v("#")]),s._v(" DNS 服务器的种类")]),s._v(" "),t("p",[s._v("DNS 服务器是能提供域名解析的服务器，上面的记录类型可以是A(address)记录，NS记录（name server），MX（mail），CNAME等")]),s._v(" "),t("p",[s._v("总结一下，上面一共提到了四种服务器。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("1.1.1.1\n根域名服务器\nTLD 服务器\n一级域名服务器")])]),t("p",[s._v("它们都属于 DNS 服务器，都用来接受 DNS 查询。但是作用不一样，属于不同的类别。")]),s._v(" "),t("h3",{attrs:{id:"递归-dns-服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#递归-dns-服务器"}},[s._v("#")]),s._v(" 递归 DNS 服务器")]),s._v(" "),t("p",[s._v("后三种服务器只用来查询下一级域名的 IP 地址，而 1.1.1.1 则把分步骤的查询过程自动化，方便用户一次性得到结果，所以它称为递归 DNS 服务器（recursive DNS server），即可以自动递归查询。")]),s._v(" "),t("p",[s._v("我们平常说的 DNS 服务器，一般都是指递归 DNS 服务器。它把 DNS 查询自动化了，只要向它查询就可以了。")]),s._v(" "),t("p",[s._v("它内部有缓存，可以保存以前查询的结果，下次再有人查询，就直接返回缓存里面的结果。所以它能加快查询，减轻源头 DNS 服务器的负担")]),s._v(" "),t("p",[s._v("现在我有一台计算机，通过ISP接入了互联网，那么ISP就会给我分配一个DNS服务器.这个DNS服务器就是 递归服务器，他会帮你迭代权威服务器返回的应答，然后把最终查到IP返回给你。")]),s._v(" "),t("h3",{attrs:{id:"权威-dns-服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#权威-dns-服务器"}},[s._v("#")]),s._v(" 权威 DNS 服务器")]),s._v(" "),t("p",[t("strong",[s._v("一级域名服务器")]),s._v("的正式名称叫做权威域名服务器（Authoritative Name Server）。")]),s._v(" "),t("p",[s._v('"权威"的意思是域名的 IP 地址由它给定，不像递归服务器自己做不了主。我们购买域名后，设置 DNS 服务器就是在设置该域名的权威服务器。')]),s._v(" "),t("h3",{attrs:{id:"四种-dns-服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四种-dns-服务器"}},[s._v("#")]),s._v(" 四种 DNS 服务器")]),s._v(" "),t("p",[s._v("综上所述，DNS 服务器可以分成四种：")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("根域名服务器\nTLD 服务器\n权威域名服务器\n递归域名服务器")])]),t("p",[s._v("它们的关系如下图")]),s._v(" "),t("p",[t("img",{attrs:{src:a(615),alt:""}})]),s._v(" "),t("p",[s._v("知道了 DNS 查询的原理，完全可以自己写一个 DNS 的递归服务器，这是不难的。网上有很多参考资料，有兴趣的话，大家可以试试看。")]),s._v(" "),t("h2",{attrs:{id:"解析过程总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解析过程总结"}},[s._v("#")]),s._v(" 解析过程总结")]),s._v(" "),t("p",[s._v("客户端查询 DNS 的过程是：")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("本地缓存 - hosts 文件 - 本地 DNS 服务器")])]),t("p",[t("img",{attrs:{src:a(616),alt:""}})]),s._v(" "),t("blockquote",[t("p",[s._v("详细解析过程参见 "),t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/58108010",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("域名解析实例"),t("OutboundLink")],1),s._v(" "),t("a",{attrs:{href:"https://server.51cto.com/article/704508.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("八分钟带你读懂 DNS 域名解析流程"),t("OutboundLink")],1)])]),s._v(" "),t("ol",[t("li",[s._v("浏览器缓存检查")]),s._v(" "),t("li",[s._v("操作系统缓存检查 + hosts 解析")]),s._v(" "),t("li",[s._v("客户端通过浏览器访问域名为 "),t("code",[s._v("www.baidu.com (http://www.baidu.com)")]),s._v(" 的网站，发起查询该域名的 IP 地址的 DNS 请求。该请求发送到了本地 DNS 服务器上。本地 DNS 服务器会首先查询它的缓存记录，如果缓存中有此条记录，就可以直接返回结果。如果没有，本地 DNS 服务器还要向 DNS 根服务器进行查询。")]),s._v(" "),t("li",[s._v("本地 DNS 服务器向根服务器发送 DNS 请求，请求域名为 www.baidu.com (http://www.baidu.com) 的 IP 地址")]),s._v(" "),t("li",[s._v("根服务器经过查询，没有记录该域名及 IP 地址的对应关系。但是会告诉本地 DNS 服务器，可以到域名服务器上继续查询，并给出域名服务器的地址(.com 服务器)。")]),s._v(" "),t("li",[s._v("本地 DNS 服务器向 .com 服务器发送 DNS 请求，请求域名 www.baidu.com (http://www.baidu.com) 的 IP 地址。")]),s._v(" "),t("li",[s._v("com 服务器收到请求后，不会直接返回域名和 IP 地址的对应关系，而是告诉本地DNS 服务器，该域名可以在 baidu.com 域名服务器上进行解析获取 IP 地址，并告诉 baidu.com 域名服务器的地址。")]),s._v(" "),t("li",[s._v("本地 DNS 服务器向 baidu.com 域名服务器发送 DNS 请求，请求域名 www.baidu.com (http://www.baidu.com) 的 IP 地址。")]),s._v(" "),t("li",[s._v("baidu.com 服务器收到请求后，在自己的缓存表中发现了该域名和 IP 地址的对应关系，并将 IP 地址返回给本地 DNS 服务器。")]),s._v(" "),t("li",[s._v("本地 DNS 服务器将获取到与域名对应的 IP 地址返回给客户端，并且将域名和 IP 地址的对应关系保存在缓存中，以备下次别的用户查询时使用。")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(617),alt:""}})]),s._v(" "),t("blockquote",[t("p",[s._v("注：从客户端到本地DNS服务器是属于递归查询，而DNS服务器之间就是迭代查询。")])]),s._v(" "),t("h2",{attrs:{id:"有-cdn-解析过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有-cdn-解析过程"}},[s._v("#")]),s._v(" 有 CDN 解析过程")]),s._v(" "),t("h3",{attrs:{id:"cdn-加速原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cdn-加速原理"}},[s._v("#")]),s._v(" CDN 加速原理")]),s._v(" "),t("p",[s._v("上面的流程来看，一个域名通常对应着一个记录。但是想必你也听说过 CDN 加速。")]),s._v(" "),t("p",[s._v("CDN (Content Delivery Network)，内容分发网络。在现有的网络中再添加一层缓存层，并将网站内容分发到多个边缘节点上。受到请求只从距离用户最近的节点调取。")]),s._v(" "),t("p",[s._v("有点类似「空间换时间」的做法。以此可以加快访问速度，降低骨干网压力。")]),s._v(" "),t("p",[s._v("但是同时，我们发现即便是同一个域名，不同位置的用户查询需要返回不同位置对应最近的 CDN 节点。所以在 DNS 解析过程中需要一定特殊手段实现。")]),s._v(" "),t("p",[s._v("DNS服务器根据用户 IP 地址，将域名解析成相应节点的缓存服务器IP地址，实现用户就近访问。使用CDN服务的网站，只需将其域名解析权交给 CDN 的GSLB 设备，将需要分发的内容注入 CDN，就可以实现内容加速了。")]),s._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://blog.ichr.me/post/how-dns-and-cdn-work/#CDN-%E5%8A%A0%E9%80%9F%E5%8E%9F%E7%90%86",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("浅谈 DNS 解析与 CDN 原理"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("最简单的CDN网络有一个DNS服务器和几台缓存服务器就可以运行了。一个典型的CDN用户访问调度流程如图所示。")]),s._v(" "),t("p",[s._v("如果用户访问的网站部署了 CDN，过程是这样的：")]),s._v(" "),t("ol",[t("li",[s._v("浏览器要将域名解析为 IP 地址，所以先向本地 DNS 发出请求。")]),s._v(" "),t("li",[s._v("本地 DNS 依次向根服务器、顶级域名服务器、二级域名服务器、三级域名服务器发出请求，DNS系统会最终将域名的解析权交给 CNAME 指向的 CDN 专用 DNS 服务器,得到全局负载均衡系统（GSLB）的 IP 地址。")]),s._v(" "),t("li",[s._v("本地 DNS 再向 GSLB 发出请求，GSLB 可以根据本地 DNS 的 IP 地址判断用户的位置，筛选出距离用户较近的本地负载均衡系统（SLB），并将该 SLB 的 IP 地址作为结果返回给本地 DNS。\n"),t("ol",[t("li",[s._v("根据用户IP地址，判断哪一台服务器距用户最近；")]),s._v(" "),t("li",[s._v("根据用户所请求的URL中携带的内容名称，判断哪一台服务器上有用户所需内容；查询各个服务器当前的负载情况，判断哪一台服务器尚有服务能力")])])]),s._v(" "),t("li",[s._v("本地 DNS 将 SLB 的 IP 地址发回给浏览器，浏览器向 SLB 发出请求。")]),s._v(" "),t("li",[s._v("SLB 根据浏览器请求的资源和地址，选出最优的缓存服务器发回给浏览器。")]),s._v(" "),t("li",[s._v("浏览器再重定向到缓存服务器。")]),s._v(" "),t("li",[s._v("如果缓存服务器有浏览器需要的资源，就将资源发回给浏览器。")]),s._v(" "),t("li",[s._v("如果没有，就向源服务器请求资源，再发给浏览器并缓存在本地")])]),s._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6844904190905417736",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("CDN请求过程详解"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"cname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cname"}},[s._v("#")]),s._v(" CNAME")]),s._v(" "),t("p",[s._v("CNAME 即指别名记录，也被称为规范名字。一般用来把域名解析到别的域名上，当需要将域名指向另一个域名，再由另一个域名提供 ip 地址，就需要添加 CNAME 记录")]),s._v(" "),t("p",[s._v("比如 我在 github pages 上部署了项目访问地址为 "),t("a",{attrs:{href:"%5Bxxdanny.github.io/learn-fe/%5D(https://xxdanny.github.io/learn-FE/)"}},[s._v("xxdanny.github.io/learn-fe/")]),s._v(",但我想通过 "),t("a",{attrs:{href:"temp2.jikdn.top"}},[s._v("temp2.jikdn.top")]),s._v(" 这个域名来访问，我可以去配置 CNAME")]),s._v(" "),t("p",[t("img",{attrs:{src:a(618),alt:""}})]),s._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2018/05/root-domain.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("根域名的知识"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://www.cloudflare.com/zh-cn/learning/dns/what-is-dns/",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("什么是 DNS？ | DNS 的工作方式"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://www.interserver.net/tips/kb/dns-dns-hierarchy/",target:"_blank",rel:"nofollow noopener noreferrer"}},[s._v("What is DNS and the DNS Hierarchy "),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports},606:function(s,t,a){s.exports=a.p+"assets/img/DNS2.1655f8d6.png"},607:function(s,t,a){s.exports=a.p+"assets/img/DNS1.0f0bdd93.png"},608:function(s,t,a){s.exports=a.p+"assets/img/DNS3.4b862086.png"},609:function(s,t,a){s.exports=a.p+"assets/img/DNS4.6aa32123.png"},610:function(s,t,a){s.exports=a.p+"assets/img/DNS5.107bcd1d.png"},611:function(s,t,a){s.exports=a.p+"assets/img/DNS6.0bf2d764.png"},612:function(s,t,a){s.exports=a.p+"assets/img/DNS7.2cdf9036.png"},613:function(s,t,a){s.exports=a.p+"assets/img/DNS8.10a47a2d.png"},614:function(s,t,a){s.exports=a.p+"assets/img/DNS9.321bd81f.png"},615:function(s,t,a){s.exports=a.p+"assets/img/DNS10.53351c91.png"},616:function(s,t,a){s.exports=a.p+"assets/img/DNS11.6a493250.png"},617:function(s,t,a){s.exports=a.p+"assets/img/DNS12.3cd0f683.png"},618:function(s,t,a){s.exports=a.p+"assets/img/CNAME.2e6ee265.png"}}]);