(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{1023:function(t,e,o){"use strict";o.r(e);var s=o(3),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"object-fit-object-position"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-fit-object-position"}},[t._v("#")]),t._v(" object-fit&object-position")]),t._v(" "),e("h2",{attrs:{id:"object-fit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-fit"}},[t._v("#")]),t._v(" object-fit")]),t._v(" "),e("p",[t._v("根据"),e("a",{attrs:{href:"https://www.w3.org/TR/css-images-3/#the-object-position",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("官方文档"),e("OutboundLink")],1),t._v("的解释")]),t._v(" "),e("blockquote",[e("p",[t._v("The object-fit CSS property specifies how the contents of a replaced element should be fitted to the box established by its used height and width.")])]),t._v(" "),e("blockquote",[e("p",[t._v("The object-position property determines the alignment of the replaced element inside its box.")])]),t._v(" "),e("h2",{attrs:{id:"替换元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#替换元素"}},[t._v("#")]),t._v(" 替换元素")]),t._v(" "),e("p",[t._v("不是所有元素都叫“替换元素”。在CSS中，“替换元素”指的是（引用自"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("）：")]),t._v(" "),e("blockquote",[e("p",[t._v("其内容不受 CSS 视觉格式化模型（中文释义参见这里）控制的元素，比如 image, 嵌入的文档(iframe 之类)或者 applet。比如，img 元素的内容通常会被其 src 属性指定的图像替换掉。\n替换元素通常有其固有的尺寸：一个固有的宽度，一个固有的高度和一个固有的比率。比如一幅位图有固有用绝对单位指定的宽度和高度，从而也有固有的宽高比率。另一方面，其他文档也可能没有固有的尺寸，比如一个空白的 html 文档。\nCSS渲染模型不考虑替换元素内容的渲染。这些替换元素的展现独立于 CSS 。object, video, textarea, input 也是替换元素，audio 和canvas 在某些特定情形下为替换元素。\n使用 CSS 的 content 属性插入的对象是匿名替换元素。")])]),t._v(" "),e("p",[t._v("在 CSS 中，可替换元素（replaced element）的展现效果不是由 CSS 来控制的。这些元素是一种外部对象，它们外观的渲染，是独立于 CSS 的。")]),t._v(" "),e("p",[t._v("简单来说，它们的内容不受当前文档的样式的影响。CSS 可以影响可替换元素的位置，但不会影响到可替换元素自身的内容。某些可替换元素，例如 "),e("code",[t._v("<iframe>")]),t._v(" 元素，可能具有自己的样式表，但它们不会继承父文档的样式。")]),t._v(" "),e("p",[t._v("CSS 能对可替换元素产生的唯一影响在于，部分属性支持控制元素内容在其框中的位置或定位方式。")]),t._v(" "),e("p",[t._v("典型的可替换元素有")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("<iframe>")])]),t._v(" "),e("li",[e("code",[t._v("<video>")])]),t._v(" "),e("li",[e("code",[t._v("<embed>")])]),t._v(" "),e("li",[e("code",[t._v("<img>")])])]),t._v(" "),e("p",[t._v("用 CSS content 属性插入的对象是匿名的可替换元素。它们并不存在于 "),e("code",[t._v("HTML")]),t._v(" 标记中，因此是“匿名的”。")]),t._v(" "),e("h3",{attrs:{id:"css-控制内容框中的对象位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-控制内容框中的对象位置"}},[t._v("#")]),t._v(" CSS 控制内容框中的对象位置")]),t._v(" "),e("p",[t._v("某些 CSS 属性可用于指定 可替换元素中包含的内容对象 在该元素的盒区域内的位置或定位方式。这些属性的具体定义可以在 "),e("a",{attrs:{href:"https://drafts.csswg.org/css-images/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("CSS3 Images"),e("OutboundLink")],1),t._v(" 规范中找到：")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"},[t._v("object-fit")]),e("p",[t._v("指定可替换元素的内容对象在元素盒区域中的填充方式。（有些类似于 background-size ）")])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"},[t._v("object-position")]),e("p",[t._v("指定可替换元素的内容对象在元素盒区域中的位置。（类似于 background-position ）")])]),e("p",[t._v("object-fit属性定义元素如何响应其内容框的高度和宽度。它适用于与该object-position属性一起使用的图像、视频和其他可嵌入媒体格式。单独使用它，object-fit我们可以通过精细控制它在盒子内的挤压和拉伸方式来裁剪内嵌图像。")]),t._v(" "),e("p",[t._v("object-fit可以使用以下五个值之一设置：")]),t._v(" "),e("ul",[e("li",[t._v("fill：这是拉伸图像以适应内容框的默认值，无论其纵横比如何。")]),t._v(" "),e("li",[t._v("contain：增加或减小图像的大小以填充框，同时保持其纵横比。")]),t._v(" "),e("li",[t._v("cover：图像将填充其框的高度和宽度，再次保持其纵横比，但在此过程中经常裁剪图像。")]),t._v(" "),e("li",[t._v("none：图像将忽略父级的高度和宽度并保留其原始大小。")]),t._v(" "),e("li",[t._v("scale-down：图像将比较 none 和 contain 之间的差异，以找到最小的具体对象大小。")])]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:""}},[t._v("object-fit | MDN")])])]),t._v(" "),e("h2",{attrs:{id:"object-position"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-position"}},[t._v("#")]),t._v(" object-position")]),t._v(" "),e("p",[t._v("CSS 属性 "),e("a",{attrs:{href:"https://www.w3.org/TR/css-images-3/#the-object-position",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("object-position"),e("OutboundLink")],1),t._v(" 用于 "),e("code",[t._v("<img>")]),t._v(" 在包含它的框中对齐任何选定的替换元素")]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-position")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" right bottom"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("img",{attrs:{src:o(432),alt:""}})]),t._v(" "),e("p",[t._v("这里有一个 "),e("a",{attrs:{href:"https://codepen.io/mattdecamp/pen/yLarwxX",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("DEMO"),e("OutboundLink")],1),t._v(",可以看看几个不同的 object-position 属性在工作中的例子。")]),t._v(" "),e("p",[e("img",{attrs:{src:o(433),alt:""}})]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("See More")]),t._v(" "),e("p",[t._v("上面的示例演示了object-position当图像小于父容器时如何将图像元素相对于其父容器对齐。再次注意使用object-fit: nonein 来进行object-position工作。")])]),t._v(" "),e("h3",{attrs:{id:"图片超出容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图片超出容器"}},[t._v("#")]),t._v(" 图片超出容器")]),t._v(" "),e("p",[t._v("然后再来看看图片尺寸大于替换元素场景下 object-position 属性在工作中的 "),e("a",{attrs:{href:"https://codepen.io/mattdecamp/pen/mdOLErO",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("DEMO 实例"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("img",{attrs:{src:o(434),alt:""}})]),t._v(" "),e("p",[t._v("个人理解当图片超出容器时，设置百分数，是容器在内容上的移动。比如内容图片尺寸宽度是 200px，img 尺寸是 100px。设置 "),e("code",[t._v("object-position: 50%")]),t._v(" 是让内容图片的中间部分，展示在容器口中。 而设置 "),e("code",[t._v("object-position: 50px 50px")]),t._v(" 是设置内容图片在容器中的位置为 (50px，50px)")]),t._v(" "),e("p",[t._v("可以利用 "),e("code",[t._v("object-position")]),t._v(" 移动图片焦点 + "),e("code",[t._v("object-fit: none")]),t._v(" 做"),e("a",{attrs:{href:"https://codepen.io/robinrendle/pen/RNLdNd",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("轮播图"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),e("ol",[e("li",[t._v("响应式图像裁剪")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://codepen.io/mattdecamp/pen/zYomWdE",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("示例"),e("OutboundLink")],1),t._v("有一个基本的响应式布局，文本上方有图像。也许这张图片中的人是文章的主题，随着屏幕尺寸变小，我们希望保持对这个主题的关注。object-position 此处用于保持焦点，在特定断点处裁剪图像 "),e("code",[t._v("object-position: left bottom")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("程式化的边框")])]),t._v(" "),e("p",[t._v("我们可以做的另一件很酷的事情是"),e("a",{attrs:{href:"https://codepen.io/mattdecamp/pen/RwoyXwZ",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("使用父容器的负空间来绘制假边框"),e("OutboundLink")],1),t._v("。我们在父容器上设置背景色，放入比容器小的图片，然后 object-position 用来对齐图片。剩下的有点像边框。当我们开始将许多容器放在一起时会变得非常有趣，因为它看起来好像在它们之间画了一条线，可以形成整齐的图案。")]),t._v(" "),e("p",[e("img",{attrs:{src:o(435),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"兼容性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#兼容性"}},[t._v("#")]),t._v(" 兼容性")]),t._v(" "),e("p",[t._v("object-fit 除 IE/Edge 之外的所有东西都支持。\n然而，除 Safari 和 IE/Edge 之外的所有设备都 object-position 支持。")]),t._v(" "),e("p",[t._v("有个Github上有个 "),e("a",{attrs:{href:"https://github.com/anselmh/object-fit",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("polyfill"),e("OutboundLink")],1),t._v(", 大家有兴趣可以围观下。")]),t._v(" "),e("h2",{attrs:{id:"polyfill"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#polyfill"}},[t._v("#")]),t._v(" polyfill")]),t._v(" "),e("p",[t._v("Polyfill 是一块代码（通常是 Web 上的 JavaScript），用来为旧浏览器提供它没有原生支持的较新的功能。")]),t._v(" "),e("p",[t._v("阅读下面文章 👇，了解什么是 polyfill")]),t._v(" "),e("p",[t._v("📕"),e("a",{attrs:{href:"https://remysharp.com/2010/10/08/what-is-a-polyfill",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("What is a Polyfill?"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("简而言之，polyfill 在英文中有垫片的意思，意为兜底的东西。具体指的是用于实现浏览器并不支持的原生 API 的代码。")]),t._v(" "),e("p",[t._v("比如说 querySelectorAll 是很多现代浏览器都支持的原生 Web API，但是有些古老的浏览器并不支持，那么假设有人写了一段代码来实现这个功能使这些浏览器也支持了这个功能，那么这就可以成为一个 Polyfill。")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2015/03/css3-object-position-object-fit/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("半深入理解CSS3 object-position/object-fit属性"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://css-tricks.com/on-object-fit-and-object-position/",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("A Quick Overview of "),e("code",[t._v("object-fit")]),t._v(" and "),e("code",[t._v("object-position")]),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports},432:function(t,e,o){t.exports=o.p+"assets/img/css1.c67594cb.png"},433:function(t,e,o){t.exports=o.p+"assets/img/css2.e876af4c.png"},434:function(t,e,o){t.exports=o.p+"assets/img/css3.c834ee0e.png"},435:function(t,e,o){t.exports=o.p+"assets/img/css4.e983d64d.png"}}]);